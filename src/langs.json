{
  "a+": [
    "Array languages"
  ],
  "analytica": [
    "Array languages",
    "Dataflow",
    "Numerical analysis",
    "Visual languages"
  ],
  "apl (programming": [
    "Array languages",
    "Interpreted languages"
  ],
  "chapel": [
    "Array languages",
    ""
  ],
  "fortran 90": [
    "Array languages"
  ],
  "freemat": [
    "Array languages"
  ],
  "gauss ": [
    "Array languages",
    "Compiled languages",
    "Imperative languages",
    "Numerical analysis"
  ],
  "interactive data language": [
    "Array languages"
  ],
  "j": [
    "Array languages",
    "",
    "Multiparadigm languages",
    "Single dispatch"
  ],
  "julia (programming": [
    "Array languages",
    "[[Multiple dispatch]]",
    "Scripting languages"
  ],
  "k": [
    "Array languages"
  ],
  "matlab": [
    "Array languages",
    "",
    "Interpreted languages",
    "Numerical analysis",
    ""
  ],
  "octave": [
    "Array languages"
  ],
  "q (programming language from kx": [
    "Array languages"
  ],
  "r": [
    "Array languages",
    "",
    "",
    "Interpreted languages",
    "List-based languages \u2013 LISPs",
    "Multiparadigm languages",
    "Object-oriented",
    "",
    "Scripting languages"
  ],
  "s": [
    "Array languages"
  ],
  "s-lang": [
    "Array languages",
    "",
    "",
    "Interpreted languages",
    "Scripting languages",
    "Stack-based languages"
  ],
  "sequencel": [
    "Array languages",
    "Compiled languages",
    "",
    "",
    "Pure",
    "Metaprogramming languages"
  ],
  "": [
    "Array languages",
    "Array languages",
    "Constraint programming",
    "Command line interface languages",
    "Compiled languages",
    "Compiled languages",
    "Compiled languages",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Dataflow",
    "Data-oriented languages",
    "Data-oriented languages",
    "",
    "",
    "In object code",
    "In object code",
    "Educational languages",
    "Esoteric languages",
    "Extension languages",
    "Extension languages",
    "Extension languages",
    "Extension languages",
    "Extension languages",
    "Fourth-generation languages",
    "Fourth-generation languages",
    "Pure",
    "Pure",
    "Pure",
    "Impure",
    "Impure",
    "HDLs for digital circuit design",
    "Imperative languages",
    "Imperative languages",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Interpreted languages",
    "Interpreted languages",
    "Interpreted languages",
    "Interpreted languages",
    "Interpreted languages",
    "Iterative",
    "Garbage collected languages",
    "Garbage collected languages",
    "List-based languages \u2013 LISPs",
    "Machine languages",
    "Machine languages",
    "Textual substitution macro languages",
    "Metaprogramming languages",
    "Metaprogramming languages",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Multiparadigm languages",
    "Numerical analysis",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Single dispatch",
    "Object-oriented",
    "Off-side rule languages",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "Reflective Language",
    "Reflective Language",
    "Reflective Language",
    "Reflective Language",
    "Reflective Language",
    "Reflective Language",
    "Rule-based languages",
    "Scripting languages",
    "Scripting languages",
    "Scripting languages",
    "Scripting languages",
    "Scripting languages",
    "Scripting languages",
    "Scripting languages",
    "Real-time rendering",
    "Syntax handling",
    "Syntax handling",
    "Syntax handling",
    "Visual languages",
    "Visual languages",
    "Visual languages",
    "Visual languages",
    "XML-based languages",
    "XML-based languages"
  ],
  "wolfram language": [
    "Array languages",
    "",
    "Educational languages",
    "Impure",
    "Imperative languages",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Numerical analysis",
    "",
    "Reflective Language",
    "Rule-based languages"
  ],
  "x10": [
    "Array languages",
    "",
    "Single dispatch"
  ],
  "darwin information typing architecture": [
    "Authoring languages"
  ],
  "lasso ": [
    "Authoring languages"
  ],
  "pilot": [
    "Authoring languages"
  ],
  "tutor": [
    "Authoring languages"
  ],
  "4dos": [
    "Command line interface languages"
  ],
  "bash": [
    "Scripting languages"
  ],
  "clist": [
    "Command line interface languages",
    "Scripting languages"
  ],
  "cms exec": [
    "Command line interface languages",
    "Scripting languages"
  ],
  "csh": [
    "Command line interface languages"
  ],
  "digital command language": [
    "Command line interface languages"
  ],
  "exec 2": [
    "Command line interface languages"
  ],
  "expect": [
    "Command line interface languages"
  ],
  "fish": [
    "Command line interface languages"
  ],
  "hamilton c shell": [
    "Command line interface languages"
  ],
  "jcl": [
    "Command line interface languages"
  ],
  "ksh": [
    "Scripting languages"
  ],
  "rc": [
    "Command line interface languages"
  ],
  "rexx": [
    "Command line interface languages",
    "Extension languages",
    "",
    "Interpreted languages",
    "Scripting languages"
  ],
  "bourne": [
    "Command line interface languages"
  ],
  "tacl": [
    "Command line interface languages"
  ],
  "windows batch language": [
    "Command line interface languages"
  ],
  "windows powershell": [
    "Command line interface languages",
    "Extension languages",
    "",
    "Interpreted languages",
    "Multiparadigm languages",
    "Scripting languages"
  ],
  "zsh": [
    "Command line interface languages"
  ],
  "actionscript": [
    "Compiled languages",
    "",
    "Client side",
    "Impure",
    "Imperative languages",
    "",
    "Garbage collected languages",
    "Multiparadigm languages",
    "Object-oriented",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "ada": [
    "Compiled languages",
    "",
    "Imperative languages",
    "Languages with deterministic",
    "Multiparadigm languages",
    ""
  ],
  "algol": [
    "Compiled languages",
    "Imperative languages",
    ""
  ],
  "ballerina": [
    "Compiled languages",
    "",
    "",
    "Dataflow"
  ],
  "basic": [
    "Compiled languages",
    "Imperative languages",
    "Interpreted languages"
  ],
  "bcpl": [
    "Compiled languages",
    "",
    ""
  ],
  "c": [
    "Compiled languages",
    "Garbage collected languages",
    "",
    "Textual substitution macro languages"
  ],
  "c++": [
    "Compiled languages",
    "",
    "Impure",
    "Imperative languages",
    "",
    "Languages with deterministic",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Single dispatch",
    ""
  ],
  "c#": [
    "Compiled languages",
    "",
    "Imperative languages",
    "Single dispatch",
    "Reflective Language",
    "Scripting languages"
  ],
  "ceylon": [
    "Compiled languages",
    "Impure",
    "Imperative languages",
    "Multiparadigm languages",
    "",
    "Reflective Language"
  ],
  "chill": [
    "Compiled languages",
    ""
  ],
  "clipper": [
    "Data-oriented languages"
  ],
  "cleo": [
    "Compiled languages"
  ],
  "cobol": [
    "Compiled languages",
    "Imperative languages",
    ""
  ],
  "cobra": [
    "Compiled languages",
    "Iterative",
    "Multiparadigm languages",
    "Reflective Language"
  ],
  "common": [
    "Compiled languages",
    "Impure",
    "Garbage collected languages"
  ],
  "crystal": [
    "Compiled languages"
  ],
  "curl": [
    "Compiled languages",
    "Impure",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Single dispatch",
    "Reflective Language"
  ],
  "d (programming": [
    "Compiled languages",
    "Single dispatch"
  ],
  "dasl": [
    "Compiled languages"
  ],
  "delphi": [
    "Compiled languages",
    "Single dispatch",
    "Reflective Language"
  ],
  "dibol": [
    "Compiled languages"
  ],
  "dylan (programming": [
    "Compiled languages",
    "Reflective Language"
  ],
  "ec": [
    "Compiled languages",
    "",
    "Single dispatch",
    "",
    "Reflective Language"
  ],
  "eiffel": [
    "Compiled languages",
    "",
    "Interpreted languages",
    "Multiparadigm languages"
  ],
  "sather": [
    "Compiled languages",
    "Iterative",
    "Single dispatch"
  ],
  "ubercode": [
    "Compiled languages",
    "Fourth-generation languages",
    "Single dispatch"
  ],
  "elm": [
    "Compiled languages",
    "Pure"
  ],
  "emerald": [
    "Compiled languages",
    "",
    "Educational languages"
  ],
  "erlang": [
    "Compiled languages",
    "Garbage collected languages"
  ],
  "f sharp ": [
    "Compiled languages",
    "Impure"
  ],
  "factor": [
    "Compiled languages",
    "Stack-based languages"
  ],
  "forth": [
    "Compiled languages",
    "Interpreted languages",
    "Reflective Language"
  ],
  "fortran": [
    "Imperative languages"
  ],
  "go": [
    "Compiled languages",
    "",
    "",
    "Imperative languages",
    "Garbage collected languages",
    "Multiparadigm languages",
    ""
  ],
  "gosu": [
    "Compiled languages"
  ],
  "groovy": [
    "Compiled languages",
    "Impure",
    "Imperative languages",
    "Interpreted languages",
    "Metaprogramming languages",
    "Single dispatch",
    "",
    "Reflective Language"
  ],
  "haskell": [
    "Compiled languages",
    "Pure",
    ""
  ],
  "harbour": [
    "Compiled languages",
    ""
  ],
  "java": [
    "Compiled languages",
    "",
    "Garbage collected languages",
    "Single dispatch"
  ],
  "jovial": [
    "Compiled languages",
    ""
  ],
  "julia": [
    "Compiled languages",
    "",
    "In object code",
    "Impure",
    "Imperative languages",
    "",
    "Interpreted languages",
    "Iterative",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Numerical analysis",
    "",
    "Reflective Language"
  ],
  "labview": [
    "Compiled languages",
    "Dataflow",
    "Multiparadigm languages",
    "Single dispatch",
    "Visual languages"
  ],
  "mercury": [
    "Compiled languages",
    "Pure",
    "Multiparadigm languages"
  ],
  "mesa ": [
    "Compiled languages"
  ],
  "nemerle": [
    "Compiled languages",
    "",
    "Impure",
    "Metaprogramming languages",
    "Single dispatch",
    ""
  ],
  "nim (programming": [
    "Compiled languages",
    "Imperative languages"
  ],
  "objective-c": [
    "Compiled languages",
    "",
    "Languages with deterministic",
    "Languages with automatic",
    "Multiparadigm languages",
    "Single dispatch",
    "Reflective Language"
  ],
  "p": [
    "Compiled languages",
    ""
  ],
  "pascal": [
    "Compiled languages",
    "Educational languages",
    "Interpreted languages",
    "Languages with deterministic",
    ""
  ],
  "pl/i": [
    "Compiled languages",
    "Imperative languages",
    ""
  ],
  "plus (programming": [
    "Compiled languages"
  ],
  "python": [
    "Compiled languages",
    "Extension languages",
    "Impure",
    "Imperative languages",
    "",
    "Interpreted languages",
    "Off-side rule languages",
    "Reflective Language",
    "Scripting languages"
  ],
  "rpg": [
    "Compiled languages",
    ""
  ],
  "rust": [
    "Compiled languages",
    "",
    "Impure",
    "",
    "Metaprogramming languages",
    ""
  ],
  "scala ": [
    "Compiled languages",
    ""
  ],
  "scheme (programming": [
    "Compiled languages",
    "Educational languages",
    "Impure"
  ],
  "simula": [
    "Compiled languages"
  ],
  "swift (programming": [
    "Compiled languages",
    "Imperative languages",
    "Languages with automatic"
  ],
  "ml": [
    "Compiled languages",
    "Impure",
    "Garbage collected languages"
  ],
  "standard ml": [
    "Compiled languages",
    "Impure",
    "Interpreted languages",
    "Garbage collected languages"
  ],
  "alice (programming": [
    "Compiled languages"
  ],
  "ocaml": [
    "Compiled languages",
    "Impure",
    "Imperative languages",
    "",
    "Interpreted languages",
    "Garbage collected languages",
    "Multiparadigm languages",
    "Single dispatch",
    ""
  ],
  "turing": [
    "Compiled languages"
  ],
  "vala": [
    "Compiled languages"
  ],
  "visual basic": [
    "Compiled languages",
    "Extension languages",
    "Languages with automatic",
    ""
  ],
  "visual foxpro": [
    "Compiled languages",
    "Data-oriented languages",
    "Fourth-generation languages",
    "Single dispatch",
    ""
  ],
  "visual prolog": [
    "Compiled languages",
    "Logic-based languages"
  ],
  "xojo": [
    "Compiled languages",
    "Languages with automatic",
    "Single dispatch",
    "Reflective Language"
  ],
  "ateji px": [
    ""
  ],
  "chuck": [
    "",
    "",
    "Single dispatch",
    "Reflective Language"
  ],
  "cilk": [
    "",
    ""
  ],
  "c\u03c9": [
    ""
  ],
  "clojure": [
    "",
    "Impure",
    "",
    "Garbage collected languages",
    "List-based languages \u2013 LISPs",
    "Reflective Language"
  ],
  "co-array fortran": [
    ""
  ],
  "concurrent pascal": [
    ""
  ],
  "curry": [
    "",
    "Multiparadigm languages",
    "Off-side rule languages"
  ],
  "e": [
    "",
    ""
  ],
  "elixir": [
    "",
    "Impure",
    "",
    "Metaprogramming languages"
  ],
  "erlang (programming": [
    "",
    "Impure",
    ""
  ],
  "gambit (scheme": [
    ""
  ],
  "java ": [
    "",
    "Imperative languages",
    "Reflective Language"
  ],
  "join java": [
    "",
    "",
    "Single dispatch",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "x10 (programming": [
    "",
    "Reflective Language"
  ],
  "joule": [
    ""
  ],
  "limbo": [
    ""
  ],
  "multilisp": [
    ""
  ],
  "occam (programming": [
    ""
  ],
  "occam-\u03c0": [
    ""
  ],
  "orc": [
    ""
  ],
  "oz (programming": [
    ""
  ],
  "pict (programming": [
    ""
  ],
  "rust ": [
    "",
    "Imperative languages"
  ],
  "scala": [
    "",
    "",
    "Multiparadigm languages",
    "Single dispatch"
  ],
  "unified parallel c": [
    ""
  ],
  "xproc": [
    ""
  ],
  "alef": [
    ""
  ],
  "limbo (programming": [
    ""
  ],
  "awk": [
    "Little languages",
    "Rule-based languages"
  ],
  "b": [
    ""
  ],
  "bc ": [
    "",
    "Scripting languages"
  ],
  "c (programming": [
    "",
    "Imperative languages",
    "Languages with deterministic"
  ],
  "cyclone": [
    ""
  ],
  "d": [
    "",
    "Impure",
    "Imperative languages",
    "Metaprogramming languages",
    ""
  ],
  "dart": [
    "",
    ""
  ],
  "distributed application specification": [
    ""
  ],
  "ecmascript for xml": [
    "",
    "",
    "Garbage collected languages",
    "Multiparadigm languages",
    "",
    "Reflective Language",
    "Scripting languages",
    "XML-based languages"
  ],
  "javascript": [
    "",
    "Impure",
    "Imperative languages",
    "Interpreted languages",
    "Multiparadigm languages",
    "Object-oriented",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "jscript": [
    "",
    "Impure",
    "Imperative languages",
    "",
    "Garbage collected languages",
    "Object-oriented",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "typescript": [
    "Compiled languages"
  ],
  "hlsl": [
    ""
  ],
  "ici": [
    "",
    "Scripting languages"
  ],
  "processing": [
    ""
  ],
  "groovy (programming": [
    "",
    "",
    "Multiparadigm languages"
  ],
  "kotlin": [
    "",
    "Garbage collected languages"
  ],
  "tea (programming": [
    "",
    "Impure",
    "Multiparadigm languages"
  ],
  "lpc": [
    "",
    "Interpreted languages"
  ],
  "maya embedded": [
    ""
  ],
  "perl": [
    "",
    "Impure",
    "Imperative languages",
    "",
    "Interpreted languages",
    "Garbage collected languages",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Single dispatch",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "php": [
    "",
    "",
    "Impure",
    "Imperative languages",
    "",
    "Interpreted languages",
    "Iterative",
    "Garbage collected languages",
    "Multiparadigm languages",
    "Single dispatch",
    "Reflective Language",
    "Scripting languages"
  ],
  "pico": [
    "",
    "Reflective Language"
  ],
  "pike": [
    "",
    "Extension languages",
    "",
    "Single dispatch"
  ],
  "sed": [
    "",
    "Little languages",
    "Scripting languages"
  ],
  "supercollider": [
    "",
    "Single dispatch"
  ],
  "swift": [
    "",
    "",
    "Multiparadigm languages"
  ],
  "yorick": [
    ""
  ],
  "bmdfm": [
    "Dataflow"
  ],
  "hartmann": [
    "Dataflow"
  ],
  "lucid": [
    "Dataflow"
  ],
  "max": [
    "Dataflow",
    "Visual languages"
  ],
  "oz ": [
    "Dataflow",
    "",
    "Logic-based languages"
  ],
  "prograph": [
    "Dataflow",
    "Multiparadigm languages",
    "Single dispatch"
  ],
  "pure data": [
    "Dataflow",
    "Visual languages"
  ],
  "reaktor": [
    "Dataflow"
  ],
  "streambase systems#streamsql": [
    "Dataflow"
  ],
  "vee": [
    "Dataflow"
  ],
  "vhdl": [
    "Dataflow",
    "HDLs for digital circuit design"
  ],
  "vissim": [
    "Dataflow",
    "Visual languages"
  ],
  "vvvv": [
    "Dataflow",
    "Visual languages"
  ],
  "swift (parallel scripting language)": [
    "Dataflow"
  ],
  "dbase": [
    "Data-oriented languages"
  ],
  "gremlin": [
    "Data-oriented languages",
    ""
  ],
  "mumps": [
    "Data-oriented languages",
    "Imperative languages",
    "",
    "Interpreted languages"
  ],
  "cach\u00e9": [
    "Data-oriented languages"
  ],
  "sparql": [
    "Data-oriented languages",
    ""
  ],
  "sql": [
    "Data-oriented languages",
    "",
    "Extension languages",
    "Fourth-generation languages",
    "Little languages"
  ],
  "tutorial d": [
    "Data-oriented languages"
  ],
  "webdna": [
    "Data-oriented languages",
    ""
  ],
  "wolfram": [
    "Data-oriented languages",
    "Interpreted languages"
  ],
  "filetab": [
    "Decision table languages"
  ],
  "ant": [
    "",
    "Interpreted languages",
    "XML-based languages"
  ],
  "cypher": [
    ""
  ],
  "distributed application specification language": [
    "",
    "Single dispatch",
    ""
  ],
  "ecl (data-centric programming": [
    ""
  ],
  "lustre": [
    ""
  ],
  "metapost": [
    ""
  ],
  "modelica": [
    ""
  ],
  "prolog": [
    "",
    "",
    "Logic-based languages",
    "Reflective Language",
    "Rule-based languages",
    "Syntax handling"
  ],
  "qml": [
    ""
  ],
  "rdql": [
    ""
  ],
  "xbase": [
    "",
    "Fourth-generation languages"
  ],
  "xsl transformations": [
    ""
  ],
  "vbscript": [
    "",
    "Client side",
    "Interpreted languages",
    "",
    "Scripting languages"
  ],
  "smx": [
    ""
  ],
  "tcl": [
    "",
    "In object code",
    "Extension languages",
    "Impure",
    "Imperative languages",
    "Interpreted languages",
    "List-based languages \u2013 LISPs",
    "Multiparadigm languages",
    "Reflective Language",
    "Scripting languages"
  ],
  "javascript (aka ecmascript or": [
    "Client side"
  ],
  "ch": [
    "In object code",
    "Scripting languages"
  ],
  "eel": [
    "In object code"
  ],
  "io (programming": [
    "In object code"
  ],
  "lua": [
    "In object code",
    "Extension languages",
    "Imperative languages",
    "",
    "Iterative",
    "Garbage collected languages",
    "Multiparadigm languages",
    "Single dispatch",
    "Object-oriented"
  ],
  "minid": [
    "In object code"
  ],
  "ruby": [
    "In object code",
    "Extension languages",
    "Imperative languages",
    "Garbage collected languages",
    "Metaprogramming languages",
    "Reflective Language"
  ],
  "squirrel ": [
    "In object code"
  ],
  "alice": [
    "Educational languages",
    "Garbage collected languages"
  ],
  "blockly": [
    "Educational languages",
    "Visual languages"
  ],
  "comal (programming": [
    "Educational languages"
  ],
  "elan": [
    "Educational languages"
  ],
  "logo ": [
    "Educational languages"
  ],
  "kturtle": [
    "Educational languages"
  ],
  "modula-2": [
    "Educational languages",
    "Imperative languages",
    "Single dispatch",
    "",
    "Wirth"
  ],
  "python ": [
    "Educational languages",
    "Garbage collected languages"
  ],
  "racket": [
    "Educational languages",
    "Impure",
    "Garbage collected languages"
  ],
  "scratch": [
    "Educational languages",
    "Visual languages"
  ],
  "snap!": [
    "Educational languages",
    "Visual languages"
  ],
  "beatnik": [
    "Esoteric languages"
  ],
  "befunge": [
    "Esoteric languages"
  ],
  "brainfuck": [
    "Esoteric languages"
  ],
  "chef (programming": [
    "Esoteric languages"
  ],
  "intercal": [
    "Esoteric languages"
  ],
  "lolcode": [
    "Esoteric languages"
  ],
  "malbolge": [
    "Esoteric languages"
  ],
  "piet": [
    "Esoteric languages",
    "Stack-based languages"
  ],
  "whitespace": [
    "Esoteric languages"
  ],
  "autolisp": [
    "Extension languages"
  ],
  "cal": [
    "Extension languages",
    "Impure"
  ],
  "c/al": [
    "Extension languages"
  ],
  "guile": [
    "Extension languages"
  ],
  "emacs lisp": [
    "Extension languages",
    "Impure",
    "Garbage collected languages",
    "List-based languages \u2013 LISPs",
    "Metaprogramming languages",
    "Reflective Language",
    "Scripting languages",
    "Syntax handling"
  ],
  "optimj": [
    "Extension languages"
  ],
  "squirrel": [
    "Extension languages"
  ],
  "vim script": [
    "Extension languages"
  ],
  "1c:enterprise programming language": [
    "Fourth-generation languages",
    "Multiparadigm languages"
  ],
  "corvision": [
    "Fourth-generation languages"
  ],
  "csc": [
    "Fourth-generation languages"
  ],
  "ca-ideal": [
    "Fourth-generation languages"
  ],
  "easytrieve": [
    "Fourth-generation languages"
  ],
  "focus": [
    "Fourth-generation languages"
  ],
  "ibm informix-4gl": [
    "Fourth-generation languages"
  ],
  "linc 4gl": [
    "Fourth-generation languages"
  ],
  "mapper": [
    "Fourth-generation languages"
  ],
  "mark-iv": [
    "Fourth-generation languages"
  ],
  "natural": [
    "Fourth-generation languages"
  ],
  "progress 4gl": [
    "Fourth-generation languages"
  ],
  "pv-wave": [
    "Fourth-generation languages"
  ],
  "sas": [
    "Fourth-generation languages"
  ],
  "uniface (programming": [
    "Fourth-generation languages"
  ],
  "visual dataflex": [
    "Fourth-generation languages",
    "Single dispatch"
  ],
  "agda": [
    "Pure"
  ],
  "coq": [
    "Pure"
  ],
  "cuneiform": [
    "Pure"
  ],
  "futhark (programming": [
    "Pure"
  ],
  "hope": [
    "Pure"
  ],
  "idris": [
    "Pure"
  ],
  "joy": [
    "Pure",
    "List-based languages \u2013 LISPs",
    "Stack-based languages"
  ],
  "purescript": [
    "Pure"
  ],
  "ur": [
    "Pure"
  ],
  "kent recursive": [
    "Pure"
  ],
  "sac": [
    "Pure"
  ],
  "sasl": [
    "Pure"
  ],
  "apl": [
    "Impure",
    "",
    "Single dispatch"
  ],
  "ats (programming": [
    "Impure"
  ],
  "c sharp (programming": [
    "Impure"
  ],
  "dart (programming": [
    "Impure"
  ],
  "ecmascript": [
    "Impure",
    "Imperative languages",
    "",
    "Garbage collected languages",
    "Multiparadigm languages",
    "Object-oriented"
  ],
  "ecmascript for": [
    "Impure",
    "Imperative languages"
  ],
  "source": [
    "Impure",
    "Imperative languages",
    "",
    "Garbage collected languages",
    "Metaprogramming languages",
    "",
    "Scripting languages"
  ],
  "lfe": [
    "Impure",
    "Impure"
  ],
  "hop": [
    "Impure",
    "Multiparadigm languages"
  ],
  "j (programming": [
    "Impure"
  ],
  "java (since version 8)": [
    "Impure"
  ],
  "lisp": [
    "Impure",
    "List-based languages \u2013 LISPs",
    "Metaprogramming languages",
    "Reflective Language",
    "Syntax handling"
  ],
  "dylan": [
    "Impure",
    "Garbage collected languages",
    "List-based languages \u2013 LISPs",
    "[[Multiple dispatch]]"
  ],
  "logo": [
    "Impure",
    "Garbage collected languages",
    "Reflective Language"
  ],
  "mathematica": [
    "Impure",
    "",
    "Metaprogramming languages",
    "Numerical analysis",
    "",
    "Rule-based languages"
  ],
  "alice ": [
    "Impure"
  ],
  "nim": [
    "Impure",
    "Iterative",
    "Metaprogramming languages",
    "Off-side rule languages",
    ""
  ],
  "opal ": [
    "Impure"
  ],
  "ops5": [
    "Impure",
    "Rule-based languages"
  ],
  "q ": [
    "Impure"
  ],
  "q (programming language from kx systems)": [
    "Impure"
  ],
  "r (programming": [
    "Impure",
    "Numerical analysis"
  ],
  "raku": [
    "Impure"
  ],
  "rebol": [
    "Impure",
    "",
    "Interpreted languages",
    "Multiparadigm languages",
    "Object-oriented",
    "Reflective Language"
  ],
  "red": [
    "Impure",
    "Multiparadigm languages",
    "Object-oriented",
    "Scripting languages"
  ],
  "ruby ": [
    "Impure"
  ],
  "refal": [
    "Impure"
  ],
  "scala (programming": [
    "Impure"
  ],
  "spreadsheet": [
    "Impure",
    "Multiparadigm languages"
  ],
  "verilog-ams": [
    "HDLs for"
  ],
  "vhdl-ams": [
    "HDLs for"
  ],
  "advanced boolean": [
    "HDLs for digital circuit design"
  ],
  "altera hardware description language": [
    "HDLs for digital circuit design"
  ],
  "bluespec": [
    "HDLs for digital circuit design"
  ],
  "confluence": [
    "HDLs for digital circuit design"
  ],
  "esys.net": [
    "HDLs for digital circuit design"
  ],
  "handel-c": [
    "HDLs for digital circuit design"
  ],
  "impulse c": [
    "HDLs for digital circuit design"
  ],
  "jhdl": [
    "HDLs for digital circuit design"
  ],
  "lava ": [
    "HDLs for digital circuit design"
  ],
  "lola": [
    "HDLs for digital circuit design"
  ],
  "m": [
    "HDLs for digital circuit design"
  ],
  "myhdl": [
    "HDLs for digital circuit design"
  ],
  "palasm": [
    "HDLs for digital circuit design"
  ],
  "ruby (hardware": [
    "HDLs for digital circuit design"
  ],
  "systemc": [
    "HDLs for digital circuit design"
  ],
  "systemverilog": [
    "HDLs for digital circuit design"
  ],
  "verilog": [
    "HDLs for digital circuit design"
  ],
  "machine language": [
    "Imperative languages"
  ],
  "oberon": [
    "Imperative languages",
    "",
    "Wirth"
  ],
  "object pascal": [
    "Imperative languages",
    "Multiparadigm languages",
    "Single dispatch",
    "",
    "Wirth"
  ],
  "pascal ": [
    "Imperative languages"
  ],
  "powershell": [
    "Imperative languages",
    "Interpreted languages",
    "Garbage collected languages",
    "",
    "Reflective Language",
    "Scripting languages"
  ],
  "prose modeling": [
    "Imperative languages"
  ],
  "speakeasy": [
    "Imperative languages",
    "",
    "Interpreted languages",
    "Single dispatch"
  ],
  "common lisp": [
    "",
    "List-based languages \u2013 LISPs",
    "Multiparadigm languages",
    "[[Multiple dispatch]]",
    "Reflective Language"
  ],
  "f#": [
    "",
    "Metaprogramming languages",
    "Multiparadigm languages",
    "Off-side rule languages"
  ],
  "fril": [
    "",
    "Logic-based languages"
  ],
  "gauss": [
    ""
  ],
  "idl ": [
    ""
  ],
  "maple": [
    "",
    "Interpreted languages"
  ],
  "prose": [
    "",
    "Interpreted languages",
    "Numerical analysis",
    ""
  ],
  "ruby (programming": [
    "",
    "Interpreted languages",
    "Single dispatch"
  ],
  "scheme ": [
    ""
  ],
  "smalltalk": [
    "",
    "Garbage collected languages",
    "Metaprogramming languages",
    "Single dispatch",
    "Reflective Language",
    "Scripting languages"
  ],
  "unix shell": [
    "",
    "Scripting languages"
  ],
  "autohotkey": [
    "Scripting languages"
  ],
  "autoit": [
    "Interpreted languages",
    "Scripting languages"
  ],
  "dm ": [
    "Interpreted languages"
  ],
  "gamemaker language": [
    "Interpreted languages"
  ],
  "j ": [
    "Interpreted languages"
  ],
  "lisp (programming": [
    "Interpreted languages"
  ],
  "lua (programming": [
    "Interpreted languages"
  ],
  "postscript": [
    "Interpreted languages",
    "Stack-based languages"
  ],
  "tea": [
    "Interpreted languages",
    "List-based languages \u2013 LISPs"
  ],
  "torquescript": [
    "Interpreted languages",
    "Scripting languages"
  ],
  "thinbasic": [
    "Interpreted languages"
  ],
  "below": [
    "Interpreted languages"
  ],
  "aldor": [
    "Iterative"
  ],
  "alphard": [
    "Iterative"
  ],
  "generator (computer": [
    "Iterative"
  ],
  "clu": [
    "Iterative"
  ],
  "eiffel ": [
    "Iterative"
  ],
  "icon": [
    "Iterative"
  ],
  "information": [
    "Iterative"
  ],
  "emerald (programming": [
    "Garbage collected languages"
  ],
  "apache": [
    "Garbage collected languages"
  ],
  "lisp ": [
    "Garbage collected languages"
  ],
  "arc": [
    "Garbage collected languages"
  ],
  "haskell (programming": [
    "Garbage collected languages"
  ],
  "ada (programming": [
    ""
  ],
  "pascal (programming": [
    "",
    "Wirth"
  ],
  "rust (programming": [
    "Languages with deterministic"
  ],
  "arc (programming": [
    "List-based languages \u2013 LISPs"
  ],
  "scheme": [
    "List-based languages \u2013 LISPs",
    "Metaprogramming languages",
    "Reflective Language"
  ],
  "logo (programming": [
    "List-based languages \u2013 LISPs"
  ],
  "source (programming": [
    "List-based languages \u2013 LISPs"
  ],
  "trac": [
    "List-based languages \u2013 LISPs"
  ],
  "comet": [
    "Little languages"
  ],
  "algebraic logic functional (programming": [
    "Logic-based languages"
  ],
  "alma-0": [
    "Logic-based languages",
    "Multiparadigm languages",
    ""
  ],
  "clacl (clac-language)": [
    "Logic-based languages"
  ],
  "curry (programming": [
    "Logic-based languages"
  ],
  "janus": [
    "Logic-based languages"
  ],
  "\u03bbprolog": [
    "Logic-based languages"
  ],
  "mercury (programming": [
    "Logic-based languages"
  ],
  "roop (programming": [
    "Logic-based languages"
  ],
  "arm": [
    "Machine languages"
  ],
  "original": [
    "Machine languages"
  ],
  "16-bit thumb instructions": [
    "Machine languages"
  ],
  "64-bit": [
    "Machine languages"
  ],
  "dec": [
    "Machine languages",
    "Machine languages"
  ],
  "pdp-1": [
    "Machine languages"
  ],
  "pdp-5": [
    "Machine languages"
  ],
  "pdp-6": [
    "Machine languages"
  ],
  "pdp-11": [
    "Machine languages"
  ],
  "vax": [
    "Machine languages"
  ],
  "intel": [
    "Machine languages",
    "Machine languages"
  ],
  "x86": [
    "Machine languages"
  ],
  "16-bit x86": [
    "Machine languages"
  ],
  "intel 8086": [
    "Machine languages"
  ],
  "intel 80186": [
    "Machine languages"
  ],
  "intel 80286": [
    "Machine languages"
  ],
  "ia-32": [
    "Machine languages"
  ],
  "amd's": [
    "Machine languages"
  ],
  "ibm system/360": [
    "Machine languages"
  ],
  "mips": [
    "Machine languages"
  ],
  "motorola 6800": [
    "Machine languages"
  ],
  "motorola 68000 family": [
    "Machine languages"
  ],
  "mos technology": [
    "Machine languages",
    "Machine languages"
  ],
  "6510": [
    "Machine languages"
  ],
  "western design center": [
    "Machine languages"
  ],
  "national": [
    "Machine languages"
  ],
  "power": [
    "Machine languages"
  ],
  "powerpc": [
    "Machine languages"
  ],
  "power isa": [
    "Machine languages"
  ],
  "oracle": [
    "Machine languages"
  ],
  "mcst": [
    "Machine languages"
  ],
  "m4": [
    "Syntax handling"
  ],
  "compiler": [
    "Metaprogramming languages"
  ],
  "ec (programming": [
    "Metaprogramming languages",
    "Multiparadigm languages"
  ],
  "forth (programming": [
    "Metaprogramming languages"
  ],
  "haskell ": [
    "Metaprogramming languages",
    "Off-side rule languages"
  ],
  "maude system": [
    "Metaprogramming languages",
    "Reflective Language"
  ],
  "meta ii": [
    "Metaprogramming languages"
  ],
  "python (programming": [
    "Metaprogramming languages",
    "Multiparadigm languages"
  ],
  "alf": [
    "Multiparadigm languages"
  ],
  "apl ": [
    "Multiparadigm languages"
  ],
  "beta (programming": [
    "Multiparadigm languages"
  ],
  "c sharp ": [
    "Multiparadigm languages",
    ""
  ],
  "d ": [
    "Multiparadigm languages"
  ],
  "fantom": [
    "Multiparadigm languages"
  ],
  "harbour ": [
    "Multiparadigm languages",
    "Reflective Language"
  ],
  "lava": [
    "Multiparadigm languages",
    "Visual languages"
  ],
  "metaobject protocols": [
    "Multiparadigm languages"
  ],
  "oz": [
    "Multiparadigm languages"
  ],
  "pike (programming": [
    "Multiparadigm languages"
  ],
  "racket ": [
    "Multiparadigm languages"
  ],
  "roop": [
    "Multiparadigm languages"
  ],
  "seed7": [
    "Multiparadigm languages"
  ],
  "sisal": [
    "Multiparadigm languages"
  ],
  "aimms": [
    "Numerical analysis"
  ],
  "ampl": [
    "Numerical analysis"
  ],
  "gams": [
    "Numerical analysis"
  ],
  "seneca": [
    "Numerical analysis"
  ],
  "chinese basic": [
    "Non-English-based languages"
  ],
  "fj\u00f6lnir (programming": [
    "Non-English-based languages"
  ],
  "language symbolique": [
    "Non-English-based languages"
  ],
  "lexico": [
    "Non-English-based languages"
  ],
  "rapira": [
    "Non-English-based languages",
    ""
  ],
  "ezhil": [
    "Non-English-based languages"
  ],
  "cecil": [
    "[[Multiple dispatch]]",
    "Object-oriented"
  ],
  "actor": [
    "Single dispatch"
  ],
  "ada 95": [
    "Single dispatch"
  ],
  "beta": [
    "Single dispatch"
  ],
  "ceylon (programming": [
    "Single dispatch"
  ],
  "oxygene": [
    "Single dispatch"
  ],
  "cobra ": [
    "Single dispatch"
  ],
  "coldfusion": [
    "Single dispatch",
    "",
    "Scripting languages"
  ],
  "e ": [
    "Single dispatch"
  ],
  "gnu e": [
    "Single dispatch"
  ],
  "eiffel (programming": [
    "Single dispatch",
    ""
  ],
  "f-script": [
    "Single dispatch",
    "Reflective Language",
    "Scripting languages"
  ],
  "fortress": [
    "Single dispatch"
  ],
  "gambas": [
    "Single dispatch"
  ],
  "game maker language": [
    "Single dispatch",
    "Scripting languages"
  ],
  "lava (programming": [
    "Single dispatch"
  ],
  "modula-3": [
    "Single dispatch"
  ],
  "oberon-2": [
    "Single dispatch",
    "Reflective Language",
    "Wirth"
  ],
  "object rexx": [
    "Single dispatch",
    "Scripting languages"
  ],
  "oz,": [
    "Single dispatch"
  ],
  "revolution ": [
    "Single dispatch"
  ],
  "f-script (programming": [
    "Single dispatch"
  ],
  "little smalltalk": [
    "Single dispatch"
  ],
  "pharo": [
    "Single dispatch"
  ],
  "squeak": [
    "Single dispatch",
    "Reflective Language"
  ],
  "scratch (programming": [
    "Single dispatch"
  ],
  "ibm visualage": [
    "Single dispatch",
    "Reflective Language"
  ],
  "visualworks": [
    "Single dispatch",
    "Reflective Language"
  ],
  "spin": [
    "Single dispatch",
    "Off-side rule languages"
  ],
  "visual": [
    "Single dispatch"
  ],
  "x++": [
    "Single dispatch",
    "Reflective Language"
  ],
  "xotcl": [
    "Single dispatch",
    "Reflective Language"
  ],
  "1c:enterprise": [
    "Object-oriented"
  ],
  "actor-based concurrent language": [
    "Object-oriented"
  ],
  "agora ": [
    "Object-oriented"
  ],
  "etoys (programming": [
    "Object-oriented"
  ],
  "io": [
    "Object-oriented",
    "Scripting languages"
  ],
  "moo ": [
    "Object-oriented"
  ],
  "newtonscript": [
    "Object-oriented"
  ],
  "obliq": [
    "Object-oriented",
    "Wirth"
  ],
  "self": [
    "Object-oriented",
    "Reflective Language"
  ],
  "tads": [
    "Object-oriented"
  ],
  "iswim": [
    "Off-side rule languages"
  ],
  "abc (programming": [
    "Off-side rule languages"
  ],
  "cobra (programming": [
    "Off-side rule languages",
    ""
  ],
  "boo": [
    "Off-side rule languages"
  ],
  "genie": [
    "Off-side rule languages"
  ],
  "miranda ": [
    "Off-side rule languages"
  ],
  "orwell": [
    "Off-side rule languages"
  ],
  "elixir (programming": [
    "Off-side rule languages"
  ],
  "small": [
    ""
  ],
  "bliss": [
    ""
  ],
  "c ": [
    ""
  ],
  "combined programming language": [
    ""
  ],
  "curl (programming": [
    ""
  ],
  "f": [
    ""
  ],
  "hypertalk": [
    ""
  ],
  "tea ": [
    "",
    "Scripting languages"
  ],
  "lasso (programming": [
    ""
  ],
  "mesa": [
    ""
  ],
  "component pascal": [
    "",
    "Wirth"
  ],
  "oberon-2 ": [
    ""
  ],
  "occam": [
    ""
  ],
  "oriel (scripting": [
    ""
  ],
  "pcastl": [
    "",
    "Reflective Language"
  ],
  "pike ": [
    ""
  ],
  "pl/c": [
    ""
  ],
  "plus": [
    ""
  ],
  "microsoft dynamics": [
    ""
  ],
  "charm": [
    "Reflective Language"
  ],
  "list of cli": [
    "Reflective Language"
  ],
  "component": [
    "Reflective Language"
  ],
  "cypher (query": [
    "Reflective Language"
  ],
  "jvm": [
    "Reflective Language",
    "Scripting languages"
  ],
  "lua ": [
    "Reflective Language"
  ],
  "pop-11": [
    "Reflective Language"
  ],
  "little": [
    "Reflective Language"
  ],
  "constraint handling rules": [
    "Rule-based languages"
  ],
  "drools": [
    "Rule-based languages"
  ],
  "goal agent programming language": [
    "Rule-based languages"
  ],
  "jess (programming": [
    "Rule-based languages"
  ],
  "toontalk": [
    "Rule-based languages",
    "Visual languages"
  ],
  "{{citation": [
    "Rule-based languages"
  ],
  "applescript": [
    "Scripting languages"
  ],
  "beanshell": [
    "Scripting languages"
  ],
  "cli": [
    "Scripting languages"
  ],
  "jass": [
    "Scripting languages"
  ],
  "groovy ": [
    "Scripting languages"
  ],
  "lasso": [
    "Scripting languages"
  ],
  "maxscript": [
    "Scripting languages"
  ],
  "mel": [
    "Scripting languages"
  ],
  "oriel": [
    "Scripting languages"
  ],
  "pascal script": [
    "Scripting languages"
  ],
  "revolution": [
    "Scripting languages"
  ],
  "sh": [
    "Scripting languages"
  ],
  "beatnik (programming": [
    "Stack-based languages"
  ],
  "canonware onyx<ref>{{cite web |title=canonware onyx": [
    "Stack-based languages"
  ],
  "colorforth": [
    "Stack-based languages"
  ],
  "forth ": [
    "Stack-based languages"
  ],
  "poplog": [
    "Stack-based languages"
  ],
  "rpl": [
    "Stack-based languages"
  ],
  "argus": [
    "Synchronous"
  ],
  "averest": [
    "Synchronous"
  ],
  "esterel": [
    "Synchronous"
  ],
  "lustre ": [
    "Synchronous"
  ],
  "signal": [
    "Synchronous"
  ],
  "adobe graphics assembly language": [
    "Real-time rendering"
  ],
  "arb assembly language": [
    "Real-time rendering"
  ],
  "high-level shading language": [
    "Real-time rendering"
  ],
  "playstation shader language": [
    "Real-time rendering"
  ],
  "metal shading language": [
    "Real-time rendering"
  ],
  "cg programming": [
    "Real-time rendering"
  ],
  "shining rock shading language": [
    "Real-time rendering"
  ],
  "spark<ref>{{cite": [
    "Real-time rendering"
  ],
  "nitrous shading language<ref>{{cite": [
    "Real-time rendering"
  ],
  "godot shading language<ref>{{cite": [
    "Real-time rendering"
  ],
  "renderman shading language": [
    ""
  ],
  "houdini vex shading language": [
    ""
  ],
  "gelato ": [
    ""
  ],
  "open shading language": [
    ""
  ],
  "antlr": [
    "Syntax handling"
  ],
  "coco/r": [
    "Syntax handling"
  ],
  "gnu bison": [
    "Syntax handling"
  ],
  "flex": [
    "Syntax handling"
  ],
  "glex/gyacc": [
    "Syntax handling"
  ],
  "lex": [
    "Syntax handling"
  ],
  "yacc": [
    "Syntax handling"
  ],
  "fabrik": [
    "Visual languages"
  ],
  "nxt-g": [
    "Visual languages"
  ],
  "pict programming language": [
    "Visual languages"
  ],
  "quartz composer": [
    "Visual languages"
  ],
  "simulink": [
    "Visual languages"
  ],
  "stateflow": [
    "Visual languages"
  ],
  "subtext": [
    "Visual languages"
  ],
  "agilent": [
    "Visual languages"
  ],
  "xod (programming language)": [
    "Visual languages"
  ],
  "eicaslab": [
    "Visual languages"
  ],
  "algol w": [
    "Wirth"
  ],
  "euler": [
    "Wirth"
  ],
  "modula": [
    "Wirth"
  ],
  "mxml": [
    "XML-based languages"
  ],
  "lzx": [
    "XML-based languages"
  ],
  "xaml": [
    "XML-based languages"
  ],
  "xpath": [
    "XML-based languages"
  ],
  "xquery": [
    "XML-based languages"
  ],
  "xslt": [
    "XML-based languages"
  ],
  "shell": [
    "Interpreted languages"
  ],
  "assembly": [
    "Interpreted languages"
  ],
  "tex": [
    "Interpreted languages"
  ],
  "makefile": [
    "Interpreted languages"
  ],
  "objective-c++": [
    "Compiled languages"
  ],
  "pony": [
    "Compiled languages"
  ],
  "cmake": [
    "Interpreted languages"
  ],
  "tsql": [
    "Interpreted languages"
  ],
  "webassembly": [
    "Compiled languages"
  ],
  "reason": [
    "Compiled languages"
  ],
  "batchfile": [
    "Interpreted languages"
  ],
  "puppet": [
    "Interpreted languages"
  ],
  "cuda": [
    "Compiled languages"
  ],
  "hack": [
    "Garbage collected languages",
    "Object-oriented",
    "",
    "Single dispatch",
    "Imperative languages"
  ],
  "html": [
    "Client side"
  ],
  "css": [
    "Client side"
  ],
  "jupyter notebook": [],
  "coffeescript": [],
  "vue": [
    "Framework"
  ],
  "dockerfile": [],
  "roff": [],
  "smarty": [],
  "haxe": [],
  "hcl": [],
  "plpgsql": [],
  "starlark": [],
  "moonscript": [],
  "gherkin": [],
  "1c enterprise": [],
  "saltstack": [],
  "v": [],
  "nix": [],
  "rich text format": [],
  "purebasic": [],
  "livescript": [],
  "yara": [],
  "stan": [],
  "nsis": [],
  "f*": [],
  "ring": [],
  "objective-j": [],
  "jsonnet": [],
  "picolisp": [],
  "solidity": [],
  "eagle": [],
  "gdscript": [],
  "swig": [],
  "sqf": [],
  "isabelle": [],
  "apex": [],
  "glsl": [],
  "mql5": []
}